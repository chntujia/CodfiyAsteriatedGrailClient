// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action_respond.proto

#ifndef PROTOBUF_action_5frespond_2eproto__INCLUDED
#define PROTOBUF_action_5frespond_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace network {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_action_5frespond_2eproto();
void protobuf_AssignDesc_action_5frespond_2eproto();
void protobuf_ShutdownFile_action_5frespond_2eproto();

class Action;
class CardMsg;
class Command;
class CommandRequest;
class ErrorInput;
class HitMsg;
class HurtMsg;
class PickBan;
class Respond;
class RoleRequest;
class SkillMsg;
class TurnBegin;

enum MessageType2 {
  MSG_ROLE_REQ = 101,
  MSG_PICK_BAN = 102,
  MSG_ACTION = 103,
  MSG_RESPOND = 104,
  MSG_CMD_REQ = 106,
  MSG_ERROR_INPUT = 107,
  MSG_HIT = 108,
  MSG_TURN_BEGIN = 109,
  MSG_CARD = 110,
  MSG_HURT = 111,
  MSG_SKILL = 112
};
bool MessageType2_IsValid(int value);
const MessageType2 MessageType2_MIN = MSG_ROLE_REQ;
const MessageType2 MessageType2_MAX = MSG_SKILL;
const int MessageType2_ARRAYSIZE = MessageType2_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType2_descriptor();
inline const ::std::string& MessageType2_Name(MessageType2 value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType2_descriptor(), value);
}
inline bool MessageType2_Parse(
    const ::std::string& name, MessageType2* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType2>(
    MessageType2_descriptor(), name, value);
}
enum PlayerIdConst {
  PLAYER_NONE_ID = 100000
};
bool PlayerIdConst_IsValid(int value);
const PlayerIdConst PlayerIdConst_MIN = PLAYER_NONE_ID;
const PlayerIdConst PlayerIdConst_MAX = PLAYER_NONE_ID;
const int PlayerIdConst_ARRAYSIZE = PlayerIdConst_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerIdConst_descriptor();
inline const ::std::string& PlayerIdConst_Name(PlayerIdConst value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerIdConst_descriptor(), value);
}
inline bool PlayerIdConst_Parse(
    const ::std::string& name, PlayerIdConst* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerIdConst>(
    PlayerIdConst_descriptor(), name, value);
}
enum ROLE_STRATEGY {
  ROLE_STRATEGY_RANDOM = 1,
  ROLE_STRATEGY_31 = 2,
  ROLE_STRATEGY_BP = 3,
  ROLE_STRATEGY_CM = 4,
  ROLE_STRATEGY_ANY = 5,
  ROLE_STRATEGY_ALL = 9
};
bool ROLE_STRATEGY_IsValid(int value);
const ROLE_STRATEGY ROLE_STRATEGY_MIN = ROLE_STRATEGY_RANDOM;
const ROLE_STRATEGY ROLE_STRATEGY_MAX = ROLE_STRATEGY_ALL;
const int ROLE_STRATEGY_ARRAYSIZE = ROLE_STRATEGY_MAX + 1;

const ::google::protobuf::EnumDescriptor* ROLE_STRATEGY_descriptor();
inline const ::std::string& ROLE_STRATEGY_Name(ROLE_STRATEGY value) {
  return ::google::protobuf::internal::NameOfEnum(
    ROLE_STRATEGY_descriptor(), value);
}
inline bool ROLE_STRATEGY_Parse(
    const ::std::string& name, ROLE_STRATEGY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ROLE_STRATEGY>(
    ROLE_STRATEGY_descriptor(), name, value);
}
enum SEAT_MODE {
  SEAT_MODE_RANDOM = 1,
  SEAT_MODE_2COMBO = 2,
  SEAT_MODE_3COMBO = 3,
  SEAT_MODE_INTERLACE = 4,
  SEAT_MODE_RBBRRB = 5
};
bool SEAT_MODE_IsValid(int value);
const SEAT_MODE SEAT_MODE_MIN = SEAT_MODE_RANDOM;
const SEAT_MODE SEAT_MODE_MAX = SEAT_MODE_RBBRRB;
const int SEAT_MODE_ARRAYSIZE = SEAT_MODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SEAT_MODE_descriptor();
inline const ::std::string& SEAT_MODE_Name(SEAT_MODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SEAT_MODE_descriptor(), value);
}
inline bool SEAT_MODE_Parse(
    const ::std::string& name, SEAT_MODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SEAT_MODE>(
    SEAT_MODE_descriptor(), name, value);
}
enum BP_OPRATION {
  BP_NULL = 1,
  BP_BAN = 2,
  BP_PICK = 3
};
bool BP_OPRATION_IsValid(int value);
const BP_OPRATION BP_OPRATION_MIN = BP_NULL;
const BP_OPRATION BP_OPRATION_MAX = BP_PICK;
const int BP_OPRATION_ARRAYSIZE = BP_OPRATION_MAX + 1;

const ::google::protobuf::EnumDescriptor* BP_OPRATION_descriptor();
inline const ::std::string& BP_OPRATION_Name(BP_OPRATION value) {
  return ::google::protobuf::internal::NameOfEnum(
    BP_OPRATION_descriptor(), value);
}
inline bool BP_OPRATION_Parse(
    const ::std::string& name, BP_OPRATION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BP_OPRATION>(
    BP_OPRATION_descriptor(), name, value);
}
enum CM_OPRATION {
  CM_NULL = 1,
  CM_RED_BAN = 2,
  CM_RED_IB = 3,
  CM_RED_PICK = 4,
  CM_BLUE_BAN = 5,
  CM_BLUE_IB = 6,
  CM_BLUE_PICK = 7
};
bool CM_OPRATION_IsValid(int value);
const CM_OPRATION CM_OPRATION_MIN = CM_NULL;
const CM_OPRATION CM_OPRATION_MAX = CM_BLUE_PICK;
const int CM_OPRATION_ARRAYSIZE = CM_OPRATION_MAX + 1;

const ::google::protobuf::EnumDescriptor* CM_OPRATION_descriptor();
inline const ::std::string& CM_OPRATION_Name(CM_OPRATION value) {
  return ::google::protobuf::internal::NameOfEnum(
    CM_OPRATION_descriptor(), value);
}
inline bool CM_OPRATION_Parse(
    const ::std::string& name, CM_OPRATION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CM_OPRATION>(
    CM_OPRATION_descriptor(), name, value);
}
enum BasicActionType {
  ACTION_ATTACK = 1,
  ACTION_MAGIC = 2,
  ACTION_SPECIAL = 3,
  ACTION_ATTACK_SKILL = 4,
  ACTION_MAGIC_SKILL = 5,
  ACTION_SPECIAL_SKILL = 6,
  ACTION_ANY = 7,
  ACTION_ATTACK_MAGIC = 8,
  ACTION_UNACTIONAL = 9,
  ACTION_NONE = 100000
};
bool BasicActionType_IsValid(int value);
const BasicActionType BasicActionType_MIN = ACTION_ATTACK;
const BasicActionType BasicActionType_MAX = ACTION_NONE;
const int BasicActionType_ARRAYSIZE = BasicActionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BasicActionType_descriptor();
inline const ::std::string& BasicActionType_Name(BasicActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BasicActionType_descriptor(), value);
}
inline bool BasicActionType_Parse(
    const ::std::string& name, BasicActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BasicActionType>(
    BasicActionType_descriptor(), name, value);
}
enum BasicRespondType {
  RESPOND_REPLY_ATTACK = 10,
  RESPOND_BULLET = 11,
  RESPOND_HEAL = 12,
  RESPOND_DISCARD = 13,
  RESPOND_WEAKEN = 14,
  RESPOND_ADDITIONAL_ACTION = 15,
  RESPOND_DISCARD_COVER = 16,
  RESPOND_ROLE = 17,
  RESPOND_INSERT_BAN = 18
};
bool BasicRespondType_IsValid(int value);
const BasicRespondType BasicRespondType_MIN = RESPOND_REPLY_ATTACK;
const BasicRespondType BasicRespondType_MAX = RESPOND_INSERT_BAN;
const int BasicRespondType_ARRAYSIZE = BasicRespondType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BasicRespondType_descriptor();
inline const ::std::string& BasicRespondType_Name(BasicRespondType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BasicRespondType_descriptor(), value);
}
inline bool BasicRespondType_Parse(
    const ::std::string& name, BasicRespondType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BasicRespondType>(
    BasicRespondType_descriptor(), name, value);
}
enum CmdType {
  CMD_ACTION = 1,
  CMD_RESPOND = 2
};
bool CmdType_IsValid(int value);
const CmdType CmdType_MIN = CMD_ACTION;
const CmdType CmdType_MAX = CMD_RESPOND;
const int CmdType_ARRAYSIZE = CmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CmdType_descriptor();
inline const ::std::string& CmdType_Name(CmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CmdType_descriptor(), value);
}
inline bool CmdType_Parse(
    const ::std::string& name, CmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CmdType>(
    CmdType_descriptor(), name, value);
}
enum CardMsgType {
  CM_USE = 1,
  CM_SHOW = 2
};
bool CardMsgType_IsValid(int value);
const CardMsgType CardMsgType_MIN = CM_USE;
const CardMsgType CardMsgType_MAX = CM_SHOW;
const int CardMsgType_ARRAYSIZE = CardMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CardMsgType_descriptor();
inline const ::std::string& CardMsgType_Name(CardMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CardMsgType_descriptor(), value);
}
inline bool CardMsgType_Parse(
    const ::std::string& name, CardMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CardMsgType>(
    CardMsgType_descriptor(), name, value);
}
// ===================================================================

class RoleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.RoleRequest) */ {
 public:
  RoleRequest();
  virtual ~RoleRequest();

  RoleRequest(const RoleRequest& from);

  inline RoleRequest& operator=(const RoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleRequest& default_instance();

  void Swap(RoleRequest* other);

  // implements Message ----------------------------------------------

  inline RoleRequest* New() const { return New(NULL); }

  RoleRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleRequest& from);
  void MergeFrom(const RoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RoleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional .network.ROLE_STRATEGY strategy = 2;
  bool has_strategy() const;
  void clear_strategy();
  static const int kStrategyFieldNumber = 2;
  ::network::ROLE_STRATEGY strategy() const;
  void set_strategy(::network::ROLE_STRATEGY value);

  // repeated uint32 role_ids = 3;
  int role_ids_size() const;
  void clear_role_ids();
  static const int kRoleIdsFieldNumber = 3;
  ::google::protobuf::uint32 role_ids(int index) const;
  void set_role_ids(int index, ::google::protobuf::uint32 value);
  void add_role_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role_ids();

  // repeated int32 args = 4;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 4;
  ::google::protobuf::int32 args(int index) const;
  void set_args(int index, ::google::protobuf::int32 value);
  void add_args(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      args() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_args();

  // optional uint32 opration = 5;
  bool has_opration() const;
  void clear_opration();
  static const int kOprationFieldNumber = 5;
  ::google::protobuf::uint32 opration() const;
  void set_opration(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network.RoleRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_strategy();
  inline void clear_has_strategy();
  inline void set_has_opration();
  inline void clear_has_opration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  int strategy_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > args_;
  ::google::protobuf::uint32 opration_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static RoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class PickBan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.PickBan) */ {
 public:
  PickBan();
  virtual ~PickBan();

  PickBan(const PickBan& from);

  inline PickBan& operator=(const PickBan& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PickBan& default_instance();

  void Swap(PickBan* other);

  // implements Message ----------------------------------------------

  inline PickBan* New() const { return New(NULL); }

  PickBan* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PickBan& from);
  void MergeFrom(const PickBan& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PickBan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 strategy = 1;
  bool has_strategy() const;
  void clear_strategy();
  static const int kStrategyFieldNumber = 1;
  ::google::protobuf::uint32 strategy() const;
  void set_strategy(::google::protobuf::uint32 value);

  // optional bool is_pick = 2;
  bool has_is_pick() const;
  void clear_is_pick();
  static const int kIsPickFieldNumber = 2;
  bool is_pick() const;
  void set_is_pick(bool value);

  // repeated uint32 role_ids = 3;
  int role_ids_size() const;
  void clear_role_ids();
  static const int kRoleIdsFieldNumber = 3;
  ::google::protobuf::uint32 role_ids(int index) const;
  void set_role_ids(int index, ::google::protobuf::uint32 value);
  void add_role_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      role_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_role_ids();

  // @@protoc_insertion_point(class_scope:network.PickBan)
 private:
  inline void set_has_strategy();
  inline void clear_has_strategy();
  inline void set_has_is_pick();
  inline void clear_has_is_pick();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 strategy_;
  bool is_pick_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > role_ids_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static PickBan* default_instance_;
};
// -------------------------------------------------------------------

class TurnBegin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.TurnBegin) */ {
 public:
  TurnBegin();
  virtual ~TurnBegin();

  TurnBegin(const TurnBegin& from);

  inline TurnBegin& operator=(const TurnBegin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnBegin& default_instance();

  void Swap(TurnBegin* other);

  // implements Message ----------------------------------------------

  inline TurnBegin* New() const { return New(NULL); }

  TurnBegin* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TurnBegin& from);
  void MergeFrom(const TurnBegin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TurnBegin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 round = 2;
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 2;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network.TurnBegin)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_round();
  inline void clear_has_round();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 round_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static TurnBegin* default_instance_;
};
// -------------------------------------------------------------------

class Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.Action) */ {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  inline Action* New() const { return New(NULL); }

  Action* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_type = 1;
  bool has_action_type() const;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 1;
  ::google::protobuf::uint32 action_type() const;
  void set_action_type(::google::protobuf::uint32 value);

  // optional uint32 action_id = 2;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 src_id = 3;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 3;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // repeated uint32 dst_ids = 4;
  int dst_ids_size() const;
  void clear_dst_ids();
  static const int kDstIdsFieldNumber = 4;
  ::google::protobuf::uint32 dst_ids(int index) const;
  void set_dst_ids(int index, ::google::protobuf::uint32 value);
  void add_dst_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dst_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dst_ids();

  // repeated uint32 card_ids = 5;
  int card_ids_size() const;
  void clear_card_ids();
  static const int kCardIdsFieldNumber = 5;
  ::google::protobuf::uint32 card_ids(int index) const;
  void set_card_ids(int index, ::google::protobuf::uint32 value);
  void add_card_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_ids();

  // repeated uint32 args = 6;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 6;
  ::google::protobuf::uint32 args(int index) const;
  void set_args(int index, ::google::protobuf::uint32 value);
  void add_args(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      args() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_args();

  // @@protoc_insertion_point(class_scope:network.Action)
 private:
  inline void set_has_action_type();
  inline void clear_has_action_type();
  inline void set_has_action_id();
  inline void clear_has_action_id();
  inline void set_has_src_id();
  inline void clear_has_src_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 action_type_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dst_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > args_;
  ::google::protobuf::uint32 src_id_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// -------------------------------------------------------------------

class Respond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.Respond) */ {
 public:
  Respond();
  virtual ~Respond();

  Respond(const Respond& from);

  inline Respond& operator=(const Respond& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Respond& default_instance();

  void Swap(Respond* other);

  // implements Message ----------------------------------------------

  inline Respond* New() const { return New(NULL); }

  Respond* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Respond& from);
  void MergeFrom(const Respond& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Respond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 respond_id = 1;
  bool has_respond_id() const;
  void clear_respond_id();
  static const int kRespondIdFieldNumber = 1;
  ::google::protobuf::uint32 respond_id() const;
  void set_respond_id(::google::protobuf::uint32 value);

  // optional uint32 src_id = 2;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 2;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // repeated uint32 dst_ids = 3;
  int dst_ids_size() const;
  void clear_dst_ids();
  static const int kDstIdsFieldNumber = 3;
  ::google::protobuf::uint32 dst_ids(int index) const;
  void set_dst_ids(int index, ::google::protobuf::uint32 value);
  void add_dst_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dst_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dst_ids();

  // repeated uint32 card_ids = 4;
  int card_ids_size() const;
  void clear_card_ids();
  static const int kCardIdsFieldNumber = 4;
  ::google::protobuf::uint32 card_ids(int index) const;
  void set_card_ids(int index, ::google::protobuf::uint32 value);
  void add_card_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_ids();

  // repeated uint32 args = 5;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 5;
  ::google::protobuf::uint32 args(int index) const;
  void set_args(int index, ::google::protobuf::uint32 value);
  void add_args(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      args() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_args();

  // @@protoc_insertion_point(class_scope:network.Respond)
 private:
  inline void set_has_respond_id();
  inline void clear_has_respond_id();
  inline void set_has_src_id();
  inline void clear_has_src_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 respond_id_;
  ::google::protobuf::uint32 src_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dst_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > args_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static Respond* default_instance_;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  inline Command* New() const { return New(NULL); }

  Command* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 respond_id = 1;
  bool has_respond_id() const;
  void clear_respond_id();
  static const int kRespondIdFieldNumber = 1;
  ::google::protobuf::uint32 respond_id() const;
  void set_respond_id(::google::protobuf::uint32 value);

  // optional uint32 src_id = 2;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 2;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // repeated uint32 dst_ids = 3;
  int dst_ids_size() const;
  void clear_dst_ids();
  static const int kDstIdsFieldNumber = 3;
  ::google::protobuf::uint32 dst_ids(int index) const;
  void set_dst_ids(int index, ::google::protobuf::uint32 value);
  void add_dst_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dst_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dst_ids();

  // repeated uint32 card_ids = 4;
  int card_ids_size() const;
  void clear_card_ids();
  static const int kCardIdsFieldNumber = 4;
  ::google::protobuf::uint32 card_ids(int index) const;
  void set_card_ids(int index, ::google::protobuf::uint32 value);
  void add_card_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_ids();

  // repeated uint32 args = 5;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 5;
  ::google::protobuf::uint32 args(int index) const;
  void set_args(int index, ::google::protobuf::uint32 value);
  void add_args(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      args() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_args();

  // @@protoc_insertion_point(class_scope:network.Command)
 private:
  inline void set_has_respond_id();
  inline void clear_has_respond_id();
  inline void set_has_src_id();
  inline void clear_has_src_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 respond_id_;
  ::google::protobuf::uint32 src_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dst_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_ids_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > args_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// -------------------------------------------------------------------

class CommandRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.CommandRequest) */ {
 public:
  CommandRequest();
  virtual ~CommandRequest();

  CommandRequest(const CommandRequest& from);

  inline CommandRequest& operator=(const CommandRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CommandRequest& default_instance();

  void Swap(CommandRequest* other);

  // implements Message ----------------------------------------------

  inline CommandRequest* New() const { return New(NULL); }

  CommandRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CommandRequest& from);
  void MergeFrom(const CommandRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .network.CmdType cmd_type = 1;
  bool has_cmd_type() const;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 1;
  ::network::CmdType cmd_type() const;
  void set_cmd_type(::network::CmdType value);

  // repeated .network.Command commands = 2;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 2;
  const ::network::Command& commands(int index) const;
  ::network::Command* mutable_commands(int index);
  ::network::Command* add_commands();
  ::google::protobuf::RepeatedPtrField< ::network::Command >*
      mutable_commands();
  const ::google::protobuf::RepeatedPtrField< ::network::Command >&
      commands() const;

  // @@protoc_insertion_point(class_scope:network.CommandRequest)
 private:
  inline void set_has_cmd_type();
  inline void clear_has_cmd_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::network::Command > commands_;
  int cmd_type_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static CommandRequest* default_instance_;
};
// -------------------------------------------------------------------

class ErrorInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.ErrorInput) */ {
 public:
  ErrorInput();
  virtual ~ErrorInput();

  ErrorInput(const ErrorInput& from);

  inline ErrorInput& operator=(const ErrorInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorInput& default_instance();

  void Swap(ErrorInput* other);

  // implements Message ----------------------------------------------

  inline ErrorInput* New() const { return New(NULL); }

  ErrorInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ErrorInput& from);
  void MergeFrom(const ErrorInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ErrorInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .network.CmdType error_type = 1;
  bool has_error_type() const;
  void clear_error_type();
  static const int kErrorTypeFieldNumber = 1;
  ::network::CmdType error_type() const;
  void set_error_type(::network::CmdType value);

  // repeated .network.Command commands = 2;
  int commands_size() const;
  void clear_commands();
  static const int kCommandsFieldNumber = 2;
  const ::network::Command& commands(int index) const;
  ::network::Command* mutable_commands(int index);
  ::network::Command* add_commands();
  ::google::protobuf::RepeatedPtrField< ::network::Command >*
      mutable_commands();
  const ::google::protobuf::RepeatedPtrField< ::network::Command >&
      commands() const;

  // @@protoc_insertion_point(class_scope:network.ErrorInput)
 private:
  inline void set_has_error_type();
  inline void clear_has_error_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::network::Command > commands_;
  int error_type_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static ErrorInput* default_instance_;
};
// -------------------------------------------------------------------

class HitMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.HitMsg) */ {
 public:
  HitMsg();
  virtual ~HitMsg();

  HitMsg(const HitMsg& from);

  inline HitMsg& operator=(const HitMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HitMsg& default_instance();

  void Swap(HitMsg* other);

  // implements Message ----------------------------------------------

  inline HitMsg* New() const { return New(NULL); }

  HitMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HitMsg& from);
  void MergeFrom(const HitMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HitMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 cmd_id = 1;
  bool has_cmd_id() const;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::uint32 cmd_id() const;
  void set_cmd_id(::google::protobuf::uint32 value);

  // optional uint32 hit = 2;
  bool has_hit() const;
  void clear_hit();
  static const int kHitFieldNumber = 2;
  ::google::protobuf::uint32 hit() const;
  void set_hit(::google::protobuf::uint32 value);

  // optional uint32 src_id = 3;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 3;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // optional uint32 dst_id = 4;
  bool has_dst_id() const;
  void clear_dst_id();
  static const int kDstIdFieldNumber = 4;
  ::google::protobuf::uint32 dst_id() const;
  void set_dst_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network.HitMsg)
 private:
  inline void set_has_cmd_id();
  inline void clear_has_cmd_id();
  inline void set_has_hit();
  inline void clear_has_hit();
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_dst_id();
  inline void clear_has_dst_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 cmd_id_;
  ::google::protobuf::uint32 hit_;
  ::google::protobuf::uint32 src_id_;
  ::google::protobuf::uint32 dst_id_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static HitMsg* default_instance_;
};
// -------------------------------------------------------------------

class CardMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.CardMsg) */ {
 public:
  CardMsg();
  virtual ~CardMsg();

  CardMsg(const CardMsg& from);

  inline CardMsg& operator=(const CardMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardMsg& default_instance();

  void Swap(CardMsg* other);

  // implements Message ----------------------------------------------

  inline CardMsg* New() const { return New(NULL); }

  CardMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardMsg& from);
  void MergeFrom(const CardMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CardMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 src_id = 2;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 2;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // optional uint32 dst_id = 3;
  bool has_dst_id() const;
  void clear_dst_id();
  static const int kDstIdFieldNumber = 3;
  ::google::protobuf::uint32 dst_id() const;
  void set_dst_id(::google::protobuf::uint32 value);

  // repeated uint32 card_ids = 4;
  int card_ids_size() const;
  void clear_card_ids();
  static const int kCardIdsFieldNumber = 4;
  ::google::protobuf::uint32 card_ids(int index) const;
  void set_card_ids(int index, ::google::protobuf::uint32 value);
  void add_card_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_ids();

  // optional bool is_real = 5;
  bool has_is_real() const;
  void clear_is_real();
  static const int kIsRealFieldNumber = 5;
  bool is_real() const;
  void set_is_real(bool value);

  // @@protoc_insertion_point(class_scope:network.CardMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_dst_id();
  inline void clear_has_dst_id();
  inline void set_has_is_real();
  inline void clear_has_is_real();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 src_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_ids_;
  ::google::protobuf::uint32 dst_id_;
  bool is_real_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static CardMsg* default_instance_;
};
// -------------------------------------------------------------------

class HurtMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.HurtMsg) */ {
 public:
  HurtMsg();
  virtual ~HurtMsg();

  HurtMsg(const HurtMsg& from);

  inline HurtMsg& operator=(const HurtMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HurtMsg& default_instance();

  void Swap(HurtMsg* other);

  // implements Message ----------------------------------------------

  inline HurtMsg* New() const { return New(NULL); }

  HurtMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HurtMsg& from);
  void MergeFrom(const HurtMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HurtMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 src_id = 1;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 1;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // optional uint32 dst_id = 2 [default = 100000];
  bool has_dst_id() const;
  void clear_dst_id();
  static const int kDstIdFieldNumber = 2;
  ::google::protobuf::uint32 dst_id() const;
  void set_dst_id(::google::protobuf::uint32 value);

  // optional uint32 hurt = 3;
  bool has_hurt() const;
  void clear_hurt();
  static const int kHurtFieldNumber = 3;
  ::google::protobuf::uint32 hurt() const;
  void set_hurt(::google::protobuf::uint32 value);

  // optional uint32 cause = 4;
  bool has_cause() const;
  void clear_cause();
  static const int kCauseFieldNumber = 4;
  ::google::protobuf::uint32 cause() const;
  void set_cause(::google::protobuf::uint32 value);

  // optional uint32 type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:network.HurtMsg)
 private:
  inline void set_has_src_id();
  inline void clear_has_src_id();
  inline void set_has_dst_id();
  inline void clear_has_dst_id();
  inline void set_has_hurt();
  inline void clear_has_hurt();
  inline void set_has_cause();
  inline void clear_has_cause();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 src_id_;
  ::google::protobuf::uint32 dst_id_;
  ::google::protobuf::uint32 hurt_;
  ::google::protobuf::uint32 cause_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static HurtMsg* default_instance_;
};
// -------------------------------------------------------------------

class SkillMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:network.SkillMsg) */ {
 public:
  SkillMsg();
  virtual ~SkillMsg();

  SkillMsg(const SkillMsg& from);

  inline SkillMsg& operator=(const SkillMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillMsg& default_instance();

  void Swap(SkillMsg* other);

  // implements Message ----------------------------------------------

  inline SkillMsg* New() const { return New(NULL); }

  SkillMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillMsg& from);
  void MergeFrom(const SkillMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SkillMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 skill_id = 1;
  bool has_skill_id() const;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 1;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // optional uint32 src_id = 2;
  bool has_src_id() const;
  void clear_src_id();
  static const int kSrcIdFieldNumber = 2;
  ::google::protobuf::uint32 src_id() const;
  void set_src_id(::google::protobuf::uint32 value);

  // repeated uint32 dst_ids = 3;
  int dst_ids_size() const;
  void clear_dst_ids();
  static const int kDstIdsFieldNumber = 3;
  ::google::protobuf::uint32 dst_ids(int index) const;
  void set_dst_ids(int index, ::google::protobuf::uint32 value);
  void add_dst_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dst_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dst_ids();

  // @@protoc_insertion_point(class_scope:network.SkillMsg)
 private:
  inline void set_has_skill_id();
  inline void clear_has_skill_id();
  inline void set_has_src_id();
  inline void clear_has_src_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 skill_id_;
  ::google::protobuf::uint32 src_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dst_ids_;
  friend void  protobuf_AddDesc_action_5frespond_2eproto();
  friend void protobuf_AssignDesc_action_5frespond_2eproto();
  friend void protobuf_ShutdownFile_action_5frespond_2eproto();

  void InitAsDefaultInstance();
  static SkillMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleRequest

// required uint32 id = 1;
inline bool RoleRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleRequest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoleRequest::id() const {
  // @@protoc_insertion_point(field_get:network.RoleRequest.id)
  return id_;
}
inline void RoleRequest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:network.RoleRequest.id)
}

// optional .network.ROLE_STRATEGY strategy = 2;
inline bool RoleRequest::has_strategy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleRequest::set_has_strategy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleRequest::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleRequest::clear_strategy() {
  strategy_ = 1;
  clear_has_strategy();
}
inline ::network::ROLE_STRATEGY RoleRequest::strategy() const {
  // @@protoc_insertion_point(field_get:network.RoleRequest.strategy)
  return static_cast< ::network::ROLE_STRATEGY >(strategy_);
}
inline void RoleRequest::set_strategy(::network::ROLE_STRATEGY value) {
  assert(::network::ROLE_STRATEGY_IsValid(value));
  set_has_strategy();
  strategy_ = value;
  // @@protoc_insertion_point(field_set:network.RoleRequest.strategy)
}

// repeated uint32 role_ids = 3;
inline int RoleRequest::role_ids_size() const {
  return role_ids_.size();
}
inline void RoleRequest::clear_role_ids() {
  role_ids_.Clear();
}
inline ::google::protobuf::uint32 RoleRequest::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.RoleRequest.role_ids)
  return role_ids_.Get(index);
}
inline void RoleRequest::set_role_ids(int index, ::google::protobuf::uint32 value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.RoleRequest.role_ids)
}
inline void RoleRequest::add_role_ids(::google::protobuf::uint32 value) {
  role_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.RoleRequest.role_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleRequest::role_ids() const {
  // @@protoc_insertion_point(field_list:network.RoleRequest.role_ids)
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleRequest::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.RoleRequest.role_ids)
  return &role_ids_;
}

// repeated int32 args = 4;
inline int RoleRequest::args_size() const {
  return args_.size();
}
inline void RoleRequest::clear_args() {
  args_.Clear();
}
inline ::google::protobuf::int32 RoleRequest::args(int index) const {
  // @@protoc_insertion_point(field_get:network.RoleRequest.args)
  return args_.Get(index);
}
inline void RoleRequest::set_args(int index, ::google::protobuf::int32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.RoleRequest.args)
}
inline void RoleRequest::add_args(::google::protobuf::int32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:network.RoleRequest.args)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleRequest::args() const {
  // @@protoc_insertion_point(field_list:network.RoleRequest.args)
  return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleRequest::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:network.RoleRequest.args)
  return &args_;
}

// optional uint32 opration = 5;
inline bool RoleRequest::has_opration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleRequest::set_has_opration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleRequest::clear_has_opration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleRequest::clear_opration() {
  opration_ = 0u;
  clear_has_opration();
}
inline ::google::protobuf::uint32 RoleRequest::opration() const {
  // @@protoc_insertion_point(field_get:network.RoleRequest.opration)
  return opration_;
}
inline void RoleRequest::set_opration(::google::protobuf::uint32 value) {
  set_has_opration();
  opration_ = value;
  // @@protoc_insertion_point(field_set:network.RoleRequest.opration)
}

// -------------------------------------------------------------------

// PickBan

// optional uint32 strategy = 1;
inline bool PickBan::has_strategy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PickBan::set_has_strategy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PickBan::clear_has_strategy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PickBan::clear_strategy() {
  strategy_ = 0u;
  clear_has_strategy();
}
inline ::google::protobuf::uint32 PickBan::strategy() const {
  // @@protoc_insertion_point(field_get:network.PickBan.strategy)
  return strategy_;
}
inline void PickBan::set_strategy(::google::protobuf::uint32 value) {
  set_has_strategy();
  strategy_ = value;
  // @@protoc_insertion_point(field_set:network.PickBan.strategy)
}

// optional bool is_pick = 2;
inline bool PickBan::has_is_pick() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PickBan::set_has_is_pick() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PickBan::clear_has_is_pick() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PickBan::clear_is_pick() {
  is_pick_ = false;
  clear_has_is_pick();
}
inline bool PickBan::is_pick() const {
  // @@protoc_insertion_point(field_get:network.PickBan.is_pick)
  return is_pick_;
}
inline void PickBan::set_is_pick(bool value) {
  set_has_is_pick();
  is_pick_ = value;
  // @@protoc_insertion_point(field_set:network.PickBan.is_pick)
}

// repeated uint32 role_ids = 3;
inline int PickBan::role_ids_size() const {
  return role_ids_.size();
}
inline void PickBan::clear_role_ids() {
  role_ids_.Clear();
}
inline ::google::protobuf::uint32 PickBan::role_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.PickBan.role_ids)
  return role_ids_.Get(index);
}
inline void PickBan::set_role_ids(int index, ::google::protobuf::uint32 value) {
  role_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.PickBan.role_ids)
}
inline void PickBan::add_role_ids(::google::protobuf::uint32 value) {
  role_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.PickBan.role_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PickBan::role_ids() const {
  // @@protoc_insertion_point(field_list:network.PickBan.role_ids)
  return role_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PickBan::mutable_role_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.PickBan.role_ids)
  return &role_ids_;
}

// -------------------------------------------------------------------

// TurnBegin

// optional uint32 id = 1;
inline bool TurnBegin::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnBegin::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnBegin::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnBegin::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 TurnBegin::id() const {
  // @@protoc_insertion_point(field_get:network.TurnBegin.id)
  return id_;
}
inline void TurnBegin::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:network.TurnBegin.id)
}

// optional uint32 round = 2;
inline bool TurnBegin::has_round() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnBegin::set_has_round() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnBegin::clear_has_round() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnBegin::clear_round() {
  round_ = 0u;
  clear_has_round();
}
inline ::google::protobuf::uint32 TurnBegin::round() const {
  // @@protoc_insertion_point(field_get:network.TurnBegin.round)
  return round_;
}
inline void TurnBegin::set_round(::google::protobuf::uint32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:network.TurnBegin.round)
}

// -------------------------------------------------------------------

// Action

// optional uint32 action_type = 1;
inline bool Action::has_action_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Action::set_has_action_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Action::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Action::clear_action_type() {
  action_type_ = 0u;
  clear_has_action_type();
}
inline ::google::protobuf::uint32 Action::action_type() const {
  // @@protoc_insertion_point(field_get:network.Action.action_type)
  return action_type_;
}
inline void Action::set_action_type(::google::protobuf::uint32 value) {
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:network.Action.action_type)
}

// optional uint32 action_id = 2;
inline bool Action::has_action_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Action::set_has_action_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Action::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Action::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 Action::action_id() const {
  // @@protoc_insertion_point(field_get:network.Action.action_id)
  return action_id_;
}
inline void Action::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:network.Action.action_id)
}

// optional uint32 src_id = 3;
inline bool Action::has_src_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Action::set_has_src_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Action::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Action::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 Action::src_id() const {
  // @@protoc_insertion_point(field_get:network.Action.src_id)
  return src_id_;
}
inline void Action::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.Action.src_id)
}

// repeated uint32 dst_ids = 4;
inline int Action::dst_ids_size() const {
  return dst_ids_.size();
}
inline void Action::clear_dst_ids() {
  dst_ids_.Clear();
}
inline ::google::protobuf::uint32 Action::dst_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.Action.dst_ids)
  return dst_ids_.Get(index);
}
inline void Action::set_dst_ids(int index, ::google::protobuf::uint32 value) {
  dst_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Action.dst_ids)
}
inline void Action::add_dst_ids(::google::protobuf::uint32 value) {
  dst_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.Action.dst_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Action::dst_ids() const {
  // @@protoc_insertion_point(field_list:network.Action.dst_ids)
  return dst_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Action::mutable_dst_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.Action.dst_ids)
  return &dst_ids_;
}

// repeated uint32 card_ids = 5;
inline int Action::card_ids_size() const {
  return card_ids_.size();
}
inline void Action::clear_card_ids() {
  card_ids_.Clear();
}
inline ::google::protobuf::uint32 Action::card_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.Action.card_ids)
  return card_ids_.Get(index);
}
inline void Action::set_card_ids(int index, ::google::protobuf::uint32 value) {
  card_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Action.card_ids)
}
inline void Action::add_card_ids(::google::protobuf::uint32 value) {
  card_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.Action.card_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Action::card_ids() const {
  // @@protoc_insertion_point(field_list:network.Action.card_ids)
  return card_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Action::mutable_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.Action.card_ids)
  return &card_ids_;
}

// repeated uint32 args = 6;
inline int Action::args_size() const {
  return args_.size();
}
inline void Action::clear_args() {
  args_.Clear();
}
inline ::google::protobuf::uint32 Action::args(int index) const {
  // @@protoc_insertion_point(field_get:network.Action.args)
  return args_.Get(index);
}
inline void Action::set_args(int index, ::google::protobuf::uint32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Action.args)
}
inline void Action::add_args(::google::protobuf::uint32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:network.Action.args)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Action::args() const {
  // @@protoc_insertion_point(field_list:network.Action.args)
  return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Action::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:network.Action.args)
  return &args_;
}

// -------------------------------------------------------------------

// Respond

// optional uint32 respond_id = 1;
inline bool Respond::has_respond_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Respond::set_has_respond_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Respond::clear_has_respond_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Respond::clear_respond_id() {
  respond_id_ = 0u;
  clear_has_respond_id();
}
inline ::google::protobuf::uint32 Respond::respond_id() const {
  // @@protoc_insertion_point(field_get:network.Respond.respond_id)
  return respond_id_;
}
inline void Respond::set_respond_id(::google::protobuf::uint32 value) {
  set_has_respond_id();
  respond_id_ = value;
  // @@protoc_insertion_point(field_set:network.Respond.respond_id)
}

// optional uint32 src_id = 2;
inline bool Respond::has_src_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Respond::set_has_src_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Respond::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Respond::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 Respond::src_id() const {
  // @@protoc_insertion_point(field_get:network.Respond.src_id)
  return src_id_;
}
inline void Respond::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.Respond.src_id)
}

// repeated uint32 dst_ids = 3;
inline int Respond::dst_ids_size() const {
  return dst_ids_.size();
}
inline void Respond::clear_dst_ids() {
  dst_ids_.Clear();
}
inline ::google::protobuf::uint32 Respond::dst_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.Respond.dst_ids)
  return dst_ids_.Get(index);
}
inline void Respond::set_dst_ids(int index, ::google::protobuf::uint32 value) {
  dst_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Respond.dst_ids)
}
inline void Respond::add_dst_ids(::google::protobuf::uint32 value) {
  dst_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.Respond.dst_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Respond::dst_ids() const {
  // @@protoc_insertion_point(field_list:network.Respond.dst_ids)
  return dst_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Respond::mutable_dst_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.Respond.dst_ids)
  return &dst_ids_;
}

// repeated uint32 card_ids = 4;
inline int Respond::card_ids_size() const {
  return card_ids_.size();
}
inline void Respond::clear_card_ids() {
  card_ids_.Clear();
}
inline ::google::protobuf::uint32 Respond::card_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.Respond.card_ids)
  return card_ids_.Get(index);
}
inline void Respond::set_card_ids(int index, ::google::protobuf::uint32 value) {
  card_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Respond.card_ids)
}
inline void Respond::add_card_ids(::google::protobuf::uint32 value) {
  card_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.Respond.card_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Respond::card_ids() const {
  // @@protoc_insertion_point(field_list:network.Respond.card_ids)
  return card_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Respond::mutable_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.Respond.card_ids)
  return &card_ids_;
}

// repeated uint32 args = 5;
inline int Respond::args_size() const {
  return args_.size();
}
inline void Respond::clear_args() {
  args_.Clear();
}
inline ::google::protobuf::uint32 Respond::args(int index) const {
  // @@protoc_insertion_point(field_get:network.Respond.args)
  return args_.Get(index);
}
inline void Respond::set_args(int index, ::google::protobuf::uint32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Respond.args)
}
inline void Respond::add_args(::google::protobuf::uint32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:network.Respond.args)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Respond::args() const {
  // @@protoc_insertion_point(field_list:network.Respond.args)
  return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Respond::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:network.Respond.args)
  return &args_;
}

// -------------------------------------------------------------------

// Command

// optional uint32 respond_id = 1;
inline bool Command::has_respond_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command::set_has_respond_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Command::clear_has_respond_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Command::clear_respond_id() {
  respond_id_ = 0u;
  clear_has_respond_id();
}
inline ::google::protobuf::uint32 Command::respond_id() const {
  // @@protoc_insertion_point(field_get:network.Command.respond_id)
  return respond_id_;
}
inline void Command::set_respond_id(::google::protobuf::uint32 value) {
  set_has_respond_id();
  respond_id_ = value;
  // @@protoc_insertion_point(field_set:network.Command.respond_id)
}

// optional uint32 src_id = 2;
inline bool Command::has_src_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Command::set_has_src_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Command::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Command::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 Command::src_id() const {
  // @@protoc_insertion_point(field_get:network.Command.src_id)
  return src_id_;
}
inline void Command::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.Command.src_id)
}

// repeated uint32 dst_ids = 3;
inline int Command::dst_ids_size() const {
  return dst_ids_.size();
}
inline void Command::clear_dst_ids() {
  dst_ids_.Clear();
}
inline ::google::protobuf::uint32 Command::dst_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.Command.dst_ids)
  return dst_ids_.Get(index);
}
inline void Command::set_dst_ids(int index, ::google::protobuf::uint32 value) {
  dst_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Command.dst_ids)
}
inline void Command::add_dst_ids(::google::protobuf::uint32 value) {
  dst_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.Command.dst_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Command::dst_ids() const {
  // @@protoc_insertion_point(field_list:network.Command.dst_ids)
  return dst_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Command::mutable_dst_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.Command.dst_ids)
  return &dst_ids_;
}

// repeated uint32 card_ids = 4;
inline int Command::card_ids_size() const {
  return card_ids_.size();
}
inline void Command::clear_card_ids() {
  card_ids_.Clear();
}
inline ::google::protobuf::uint32 Command::card_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.Command.card_ids)
  return card_ids_.Get(index);
}
inline void Command::set_card_ids(int index, ::google::protobuf::uint32 value) {
  card_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Command.card_ids)
}
inline void Command::add_card_ids(::google::protobuf::uint32 value) {
  card_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.Command.card_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Command::card_ids() const {
  // @@protoc_insertion_point(field_list:network.Command.card_ids)
  return card_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Command::mutable_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.Command.card_ids)
  return &card_ids_;
}

// repeated uint32 args = 5;
inline int Command::args_size() const {
  return args_.size();
}
inline void Command::clear_args() {
  args_.Clear();
}
inline ::google::protobuf::uint32 Command::args(int index) const {
  // @@protoc_insertion_point(field_get:network.Command.args)
  return args_.Get(index);
}
inline void Command::set_args(int index, ::google::protobuf::uint32 value) {
  args_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.Command.args)
}
inline void Command::add_args(::google::protobuf::uint32 value) {
  args_.Add(value);
  // @@protoc_insertion_point(field_add:network.Command.args)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Command::args() const {
  // @@protoc_insertion_point(field_list:network.Command.args)
  return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Command::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:network.Command.args)
  return &args_;
}

// -------------------------------------------------------------------

// CommandRequest

// optional .network.CmdType cmd_type = 1;
inline bool CommandRequest::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CommandRequest::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CommandRequest::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CommandRequest::clear_cmd_type() {
  cmd_type_ = 1;
  clear_has_cmd_type();
}
inline ::network::CmdType CommandRequest::cmd_type() const {
  // @@protoc_insertion_point(field_get:network.CommandRequest.cmd_type)
  return static_cast< ::network::CmdType >(cmd_type_);
}
inline void CommandRequest::set_cmd_type(::network::CmdType value) {
  assert(::network::CmdType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:network.CommandRequest.cmd_type)
}

// repeated .network.Command commands = 2;
inline int CommandRequest::commands_size() const {
  return commands_.size();
}
inline void CommandRequest::clear_commands() {
  commands_.Clear();
}
inline const ::network::Command& CommandRequest::commands(int index) const {
  // @@protoc_insertion_point(field_get:network.CommandRequest.commands)
  return commands_.Get(index);
}
inline ::network::Command* CommandRequest::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:network.CommandRequest.commands)
  return commands_.Mutable(index);
}
inline ::network::Command* CommandRequest::add_commands() {
  // @@protoc_insertion_point(field_add:network.CommandRequest.commands)
  return commands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::network::Command >*
CommandRequest::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:network.CommandRequest.commands)
  return &commands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::network::Command >&
CommandRequest::commands() const {
  // @@protoc_insertion_point(field_list:network.CommandRequest.commands)
  return commands_;
}

// -------------------------------------------------------------------

// ErrorInput

// optional .network.CmdType error_type = 1;
inline bool ErrorInput::has_error_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorInput::set_has_error_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorInput::clear_has_error_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorInput::clear_error_type() {
  error_type_ = 1;
  clear_has_error_type();
}
inline ::network::CmdType ErrorInput::error_type() const {
  // @@protoc_insertion_point(field_get:network.ErrorInput.error_type)
  return static_cast< ::network::CmdType >(error_type_);
}
inline void ErrorInput::set_error_type(::network::CmdType value) {
  assert(::network::CmdType_IsValid(value));
  set_has_error_type();
  error_type_ = value;
  // @@protoc_insertion_point(field_set:network.ErrorInput.error_type)
}

// repeated .network.Command commands = 2;
inline int ErrorInput::commands_size() const {
  return commands_.size();
}
inline void ErrorInput::clear_commands() {
  commands_.Clear();
}
inline const ::network::Command& ErrorInput::commands(int index) const {
  // @@protoc_insertion_point(field_get:network.ErrorInput.commands)
  return commands_.Get(index);
}
inline ::network::Command* ErrorInput::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:network.ErrorInput.commands)
  return commands_.Mutable(index);
}
inline ::network::Command* ErrorInput::add_commands() {
  // @@protoc_insertion_point(field_add:network.ErrorInput.commands)
  return commands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::network::Command >*
ErrorInput::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:network.ErrorInput.commands)
  return &commands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::network::Command >&
ErrorInput::commands() const {
  // @@protoc_insertion_point(field_list:network.ErrorInput.commands)
  return commands_;
}

// -------------------------------------------------------------------

// HitMsg

// optional uint32 cmd_id = 1;
inline bool HitMsg::has_cmd_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HitMsg::set_has_cmd_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HitMsg::clear_has_cmd_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HitMsg::clear_cmd_id() {
  cmd_id_ = 0u;
  clear_has_cmd_id();
}
inline ::google::protobuf::uint32 HitMsg::cmd_id() const {
  // @@protoc_insertion_point(field_get:network.HitMsg.cmd_id)
  return cmd_id_;
}
inline void HitMsg::set_cmd_id(::google::protobuf::uint32 value) {
  set_has_cmd_id();
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:network.HitMsg.cmd_id)
}

// optional uint32 hit = 2;
inline bool HitMsg::has_hit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HitMsg::set_has_hit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HitMsg::clear_has_hit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HitMsg::clear_hit() {
  hit_ = 0u;
  clear_has_hit();
}
inline ::google::protobuf::uint32 HitMsg::hit() const {
  // @@protoc_insertion_point(field_get:network.HitMsg.hit)
  return hit_;
}
inline void HitMsg::set_hit(::google::protobuf::uint32 value) {
  set_has_hit();
  hit_ = value;
  // @@protoc_insertion_point(field_set:network.HitMsg.hit)
}

// optional uint32 src_id = 3;
inline bool HitMsg::has_src_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HitMsg::set_has_src_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HitMsg::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HitMsg::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 HitMsg::src_id() const {
  // @@protoc_insertion_point(field_get:network.HitMsg.src_id)
  return src_id_;
}
inline void HitMsg::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.HitMsg.src_id)
}

// optional uint32 dst_id = 4;
inline bool HitMsg::has_dst_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HitMsg::set_has_dst_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HitMsg::clear_has_dst_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HitMsg::clear_dst_id() {
  dst_id_ = 0u;
  clear_has_dst_id();
}
inline ::google::protobuf::uint32 HitMsg::dst_id() const {
  // @@protoc_insertion_point(field_get:network.HitMsg.dst_id)
  return dst_id_;
}
inline void HitMsg::set_dst_id(::google::protobuf::uint32 value) {
  set_has_dst_id();
  dst_id_ = value;
  // @@protoc_insertion_point(field_set:network.HitMsg.dst_id)
}

// -------------------------------------------------------------------

// CardMsg

// optional uint32 type = 1;
inline bool CardMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CardMsg::type() const {
  // @@protoc_insertion_point(field_get:network.CardMsg.type)
  return type_;
}
inline void CardMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:network.CardMsg.type)
}

// optional uint32 src_id = 2;
inline bool CardMsg::has_src_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardMsg::set_has_src_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardMsg::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardMsg::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 CardMsg::src_id() const {
  // @@protoc_insertion_point(field_get:network.CardMsg.src_id)
  return src_id_;
}
inline void CardMsg::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.CardMsg.src_id)
}

// optional uint32 dst_id = 3;
inline bool CardMsg::has_dst_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardMsg::set_has_dst_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardMsg::clear_has_dst_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardMsg::clear_dst_id() {
  dst_id_ = 0u;
  clear_has_dst_id();
}
inline ::google::protobuf::uint32 CardMsg::dst_id() const {
  // @@protoc_insertion_point(field_get:network.CardMsg.dst_id)
  return dst_id_;
}
inline void CardMsg::set_dst_id(::google::protobuf::uint32 value) {
  set_has_dst_id();
  dst_id_ = value;
  // @@protoc_insertion_point(field_set:network.CardMsg.dst_id)
}

// repeated uint32 card_ids = 4;
inline int CardMsg::card_ids_size() const {
  return card_ids_.size();
}
inline void CardMsg::clear_card_ids() {
  card_ids_.Clear();
}
inline ::google::protobuf::uint32 CardMsg::card_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.CardMsg.card_ids)
  return card_ids_.Get(index);
}
inline void CardMsg::set_card_ids(int index, ::google::protobuf::uint32 value) {
  card_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.CardMsg.card_ids)
}
inline void CardMsg::add_card_ids(::google::protobuf::uint32 value) {
  card_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.CardMsg.card_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CardMsg::card_ids() const {
  // @@protoc_insertion_point(field_list:network.CardMsg.card_ids)
  return card_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CardMsg::mutable_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.CardMsg.card_ids)
  return &card_ids_;
}

// optional bool is_real = 5;
inline bool CardMsg::has_is_real() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CardMsg::set_has_is_real() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CardMsg::clear_has_is_real() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CardMsg::clear_is_real() {
  is_real_ = false;
  clear_has_is_real();
}
inline bool CardMsg::is_real() const {
  // @@protoc_insertion_point(field_get:network.CardMsg.is_real)
  return is_real_;
}
inline void CardMsg::set_is_real(bool value) {
  set_has_is_real();
  is_real_ = value;
  // @@protoc_insertion_point(field_set:network.CardMsg.is_real)
}

// -------------------------------------------------------------------

// HurtMsg

// optional uint32 src_id = 1;
inline bool HurtMsg::has_src_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HurtMsg::set_has_src_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HurtMsg::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HurtMsg::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 HurtMsg::src_id() const {
  // @@protoc_insertion_point(field_get:network.HurtMsg.src_id)
  return src_id_;
}
inline void HurtMsg::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.HurtMsg.src_id)
}

// optional uint32 dst_id = 2 [default = 100000];
inline bool HurtMsg::has_dst_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HurtMsg::set_has_dst_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HurtMsg::clear_has_dst_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HurtMsg::clear_dst_id() {
  dst_id_ = 100000u;
  clear_has_dst_id();
}
inline ::google::protobuf::uint32 HurtMsg::dst_id() const {
  // @@protoc_insertion_point(field_get:network.HurtMsg.dst_id)
  return dst_id_;
}
inline void HurtMsg::set_dst_id(::google::protobuf::uint32 value) {
  set_has_dst_id();
  dst_id_ = value;
  // @@protoc_insertion_point(field_set:network.HurtMsg.dst_id)
}

// optional uint32 hurt = 3;
inline bool HurtMsg::has_hurt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HurtMsg::set_has_hurt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HurtMsg::clear_has_hurt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HurtMsg::clear_hurt() {
  hurt_ = 0u;
  clear_has_hurt();
}
inline ::google::protobuf::uint32 HurtMsg::hurt() const {
  // @@protoc_insertion_point(field_get:network.HurtMsg.hurt)
  return hurt_;
}
inline void HurtMsg::set_hurt(::google::protobuf::uint32 value) {
  set_has_hurt();
  hurt_ = value;
  // @@protoc_insertion_point(field_set:network.HurtMsg.hurt)
}

// optional uint32 cause = 4;
inline bool HurtMsg::has_cause() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HurtMsg::set_has_cause() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HurtMsg::clear_has_cause() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HurtMsg::clear_cause() {
  cause_ = 0u;
  clear_has_cause();
}
inline ::google::protobuf::uint32 HurtMsg::cause() const {
  // @@protoc_insertion_point(field_get:network.HurtMsg.cause)
  return cause_;
}
inline void HurtMsg::set_cause(::google::protobuf::uint32 value) {
  set_has_cause();
  cause_ = value;
  // @@protoc_insertion_point(field_set:network.HurtMsg.cause)
}

// optional uint32 type = 5;
inline bool HurtMsg::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HurtMsg::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HurtMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HurtMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 HurtMsg::type() const {
  // @@protoc_insertion_point(field_get:network.HurtMsg.type)
  return type_;
}
inline void HurtMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:network.HurtMsg.type)
}

// -------------------------------------------------------------------

// SkillMsg

// optional uint32 skill_id = 1;
inline bool SkillMsg::has_skill_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SkillMsg::set_has_skill_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SkillMsg::clear_has_skill_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SkillMsg::clear_skill_id() {
  skill_id_ = 0u;
  clear_has_skill_id();
}
inline ::google::protobuf::uint32 SkillMsg::skill_id() const {
  // @@protoc_insertion_point(field_get:network.SkillMsg.skill_id)
  return skill_id_;
}
inline void SkillMsg::set_skill_id(::google::protobuf::uint32 value) {
  set_has_skill_id();
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:network.SkillMsg.skill_id)
}

// optional uint32 src_id = 2;
inline bool SkillMsg::has_src_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SkillMsg::set_has_src_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SkillMsg::clear_has_src_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SkillMsg::clear_src_id() {
  src_id_ = 0u;
  clear_has_src_id();
}
inline ::google::protobuf::uint32 SkillMsg::src_id() const {
  // @@protoc_insertion_point(field_get:network.SkillMsg.src_id)
  return src_id_;
}
inline void SkillMsg::set_src_id(::google::protobuf::uint32 value) {
  set_has_src_id();
  src_id_ = value;
  // @@protoc_insertion_point(field_set:network.SkillMsg.src_id)
}

// repeated uint32 dst_ids = 3;
inline int SkillMsg::dst_ids_size() const {
  return dst_ids_.size();
}
inline void SkillMsg::clear_dst_ids() {
  dst_ids_.Clear();
}
inline ::google::protobuf::uint32 SkillMsg::dst_ids(int index) const {
  // @@protoc_insertion_point(field_get:network.SkillMsg.dst_ids)
  return dst_ids_.Get(index);
}
inline void SkillMsg::set_dst_ids(int index, ::google::protobuf::uint32 value) {
  dst_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.SkillMsg.dst_ids)
}
inline void SkillMsg::add_dst_ids(::google::protobuf::uint32 value) {
  dst_ids_.Add(value);
  // @@protoc_insertion_point(field_add:network.SkillMsg.dst_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SkillMsg::dst_ids() const {
  // @@protoc_insertion_point(field_list:network.SkillMsg.dst_ids)
  return dst_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SkillMsg::mutable_dst_ids() {
  // @@protoc_insertion_point(field_mutable_list:network.SkillMsg.dst_ids)
  return &dst_ids_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace network

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::network::MessageType2> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::MessageType2>() {
  return ::network::MessageType2_descriptor();
}
template <> struct is_proto_enum< ::network::PlayerIdConst> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::PlayerIdConst>() {
  return ::network::PlayerIdConst_descriptor();
}
template <> struct is_proto_enum< ::network::ROLE_STRATEGY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::ROLE_STRATEGY>() {
  return ::network::ROLE_STRATEGY_descriptor();
}
template <> struct is_proto_enum< ::network::SEAT_MODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::SEAT_MODE>() {
  return ::network::SEAT_MODE_descriptor();
}
template <> struct is_proto_enum< ::network::BP_OPRATION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::BP_OPRATION>() {
  return ::network::BP_OPRATION_descriptor();
}
template <> struct is_proto_enum< ::network::CM_OPRATION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::CM_OPRATION>() {
  return ::network::CM_OPRATION_descriptor();
}
template <> struct is_proto_enum< ::network::BasicActionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::BasicActionType>() {
  return ::network::BasicActionType_descriptor();
}
template <> struct is_proto_enum< ::network::BasicRespondType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::BasicRespondType>() {
  return ::network::BasicRespondType_descriptor();
}
template <> struct is_proto_enum< ::network::CmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::CmdType>() {
  return ::network::CmdType_descriptor();
}
template <> struct is_proto_enum< ::network::CardMsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::CardMsgType>() {
  return ::network::CardMsgType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_action_5frespond_2eproto__INCLUDED
